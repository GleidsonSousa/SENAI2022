package models;

import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.Objects;

public class Manutencao {

	private int id;
	private Date data;
	private String equipamento;
	private double custoHora;
	private double tempoGasto;


	private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
	private DecimalFormat df = new DecimalFormat("#.00");
	private final Locale BRASIL = new Locale("pt", "BR");


	
	public Manutencao(int id) {
		this.id = id;
	}

	// Construtor completo
	public Manutencao (int id, String data, String equipamento, String custoHora, 
			String tempoGasto
			) {
		try {
		this.id = id;
		this.data = sdf.parse(data);
		this.equipamento = equipamento;
		this.custoHora = Double.parseDouble(df.parse(custoHora).toString());
		this.tempoGasto = Double.parseDouble(df.parse(tempoGasto).toString());
		} catch (ParseException e) {
			System.out.println(e);
		}
				
	}

	// Construtor para receber dados do arquivo
	public Manutencao(String linha) {
		//this.nascimento = sdf.parse(linha.split(";")[5]);
			df.setCurrency(Currency.getInstance(BRASIL));
			try {
			this.id = Integer.parseInt(linha.split(";")[0]);
			this.data = sdf.parse(linha.split(";")[1]);
			this.equipamento = linha.split(";")[3];
			this.custoHora = Double.parseDouble(df.parse(linha.split(";")[4]).toString());
			this.tempoGasto = Double.parseDouble(df.parse(linha.split(";")[5]).toString());
			
				
				
			} catch (ParseException e) {
				System.out.println(e);
			}
		}
		


	public int getId() {
		return id;
	}

	public String getId(String s) {
		return String.format("%d", id);
	}

	public void setId(int id) {
		this.id = id;
	}
	
	public Date getData() {
		return data;
	}

	public String getData(String s) {
		return sdf.format(data);
	}

	public void setData(Date data) {
		this.data = data;
	}

	public String getEquipamento() {
		return equipamento;
	}

	public void setEquipamento(String equipamento) {
		this.equipamento = equipamento;
	}

	public double getcustoHora() {
		return custoHora;
	}
	public String custoHora(String string) {
		return String.format("%.2f", custoHora);
	}

	public void setcustoHora(double custoHora) {
		this.custoHora = custoHora;
	}
	
	public double gettempoGasto() {
		return custoHora;
	}
	public String tempoGasto(String string) {
		return String.format("%.2f", custoHora);
	}

	public void settempoGasto(double custoHora) {
		this.custoHora = custoHora;
	}
	public int obterTotal() {
		return 1+1;
	}

	// Define o "id" como campo Chave
	@Override
	public int hashCode() {
		return Objects.hash(id);
	}

	// Define o "id" como campo Chave
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pet other = (Pet) obj;
		return id == other.id;
	}

	@Override
	public String toString() {
		return id + "\t" + especie + "\t" + nomePet + "\t" + raca + "\t" + String.format("%.2f", peso) + "\t"
				+ obterIdade() + "\t" + nomeDono + "\t" + telefone + "\n";
	}

	public String toCSV() {
		return id + ";" + especie + ";" + nomePet + ";" + raca + ";" + String.format("%.2f", peso) + ";"
				+ sdf.format(nascimento) + ";" + nomeDono + ";" + telefone + "\r\n";
	}

}