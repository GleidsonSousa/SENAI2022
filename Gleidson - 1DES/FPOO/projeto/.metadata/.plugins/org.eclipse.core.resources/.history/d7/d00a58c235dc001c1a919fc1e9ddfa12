package visaoPaciente;

import java.awt.Color;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.util.Locale;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

import controleLogin.FuncionarioProcess;
import controlePaciente.PacientesProcess;
import modeloPaciente.Pacientes;

public class TelaUsuario extends JFrame implements ActionListener {

	private static final long serialVersionUID = 1L;

	private JPanel painel;

	private JComboBox<String> orgao;

	// rótulo de texto
	private JLabel Olá1, Paciente,id, LNome, LEntrada, Lmedico;

	// espaço para digitar
	private JTextField FNome, FEntrada, FTempo,Tfid;

	private JButton Salvar, Cadastrar, Editar, Excluir, Buscar;

	
	private JTable table;
	private DefaultTableModel tablePacientes;
	// setando o painel em si
	
	//Deixar o programa funciona para a digitação  BR
	private final Locale BRASIL = new Locale("pt", "BR");
	private DecimalFormat df = new DecimalFormat("#.00");
	
	TelaUsuario() {
		setTitle("Formulário de doação de ÓRGÃOS");
		setBounds(200, 500, 850, 700);

		setDefaultCloseOperation(EXIT_ON_CLOSE);

		painel = new JPanel();
		painel.setBackground(new Color(220, 212, 231));
		setContentPane(painel);

		setLayout(null);
		System.out.println(FuncionarioProcess.LoginFuncionarioConectado);

		// itens:

		// label OLÁ, DOUTOR BEM VINDO.
		
		//String doutor =FuncionarioProcess.LoginFuncionarioConectado;
		
		
		String doutor=FuncionarioProcess.LoginFuncionarioConectado;
		
		
		Olá1 = new JLabel("Olá," + doutor + "Bem Vindo");
		// local x / local y // tamanho x / tamanho y
		Olá1.setBounds(20, 10, 500, 30);
		painel.add(Olá1);
		
		// id
				// label do id:
		id = new JLabel("Id:");
		id.setBounds(20, 50, 120, 30);
		painel.add(id);
		
		// field do id:

		Tfid = new JTextField();
		Tfid.setBounds(140,50, 120, 30);
				painel.add(Tfid);
		
		// label do combobox
		Paciente = new JLabel("órgãos:");
		// local x / local y // tamanho x / tamanho y
		Paciente.setBounds(20, 100, 100, 30);
		painel.add(Paciente);

		// combobox
		orgao = new JComboBox<String>(
				new String[] { "rim", "coração", "Cornia", "Pulmão", "Fígado", "Pancreas", "Medula Ossea", "sangue" });
		orgao.setBounds(80, 100, 260, 30);
		painel.add(orgao);

		// nome
		// label do nome:
		LNome = new JLabel(" Nome do Paciente: ");
		// local x / local y // tamanho x / tamanho y
		LNome.setBounds(20, 150, 120, 30);
		painel.add(LNome);

		// field do nome:

		FNome = new JTextField();
		FNome.setBounds(140, 150, 120, 30);
		painel.add(FNome);

		// DATA DE ENTRADA
		// label dA ENTRADA:
		LEntrada = new JLabel(" DATA DE ENTRADA  ");
		// local x / local y // tamanho x / tamanho y
		LEntrada.setBounds(20, 200, 120, 30);
		painel.add(LEntrada);

		// field dA ENTRADA:

		FEntrada = new JTextField();
		FEntrada.setBounds(140, 200, 120, 30);
		painel.add(FEntrada);

		// TEMPO DE ESPERA

		// label dE ESPERA:
		Lmedico = new JLabel(" Médico ");
		// local x / local y // tamanho x / tamanho y
		Lmedico.setBounds(20, 250, 120, 30);
		painel.add(Lmedico);

		// field dA ENTRADA:

		FTempo = new JTextField();
		FTempo.setBounds(140, 250, 120, 30);
		painel.add(FTempo);
		
		//TABELA
		table = new JTable();
		tablePacientes = new DefaultTableModel();
		tablePacientes.addColumn("Id");
		tablePacientes.addColumn("Orgão");
		tablePacientes.addColumn("Nome");
		tablePacientes.addColumn("Data Entrada");
		tablePacientes.addColumn("Medico");
		
		tablePacientes.addColumn("Tempo Espera:");
		
		if (PacientesProcess.pacientes.size() != 1) {
			preencherTabela();
		}
		table = new JTable();
		// local x / local y // tamanho x / tamanho y
		table.setBounds(35, 350, 750, 300);
		painel.add(table);

		
		//scroll bar?
	
		
		// BOTÕES
		// BOTÃO SALVAR

		Salvar = new JButton("Salvar");
		Salvar.setBounds(140, 300, 90, 40);
		painel.add(Salvar);

		Salvar.addActionListener(this);
		// local x / local y // tamanho x / tamanho y
		// setBounds (200, 300, 600, 350);

		
		
		
		// BOTÃO CADASTRAR
		Cadastrar = new JButton("Cadastrar");
		Cadastrar.setBounds(450, 40, 90, 40);
		painel.add(Cadastrar);

		Cadastrar.addActionListener(this);
		
		
		
		

		// BOTÃO Editar
		Editar = new JButton("Editar");
		Editar.setBounds(450, 100, 90, 40);
		painel.add(Editar);

		Editar.addActionListener(this);

		// BOTÃO Excluir
		Excluir = new JButton("Excluir");
		Excluir.setBounds(450, 170, 90, 40);
		painel.add(Excluir);

		Excluir.addActionListener(this);

		// BOTÃO BUSCAR
		Buscar = new JButton("Buscar");
		Buscar.setBounds(450, 240, 90, 40);
		painel.add(Buscar);

		Buscar.addActionListener(this);

	}
	
	
private void SaveMet() {
		
		
	}
	
	// createcrud PARA CADASTRAR!
	private void createMet() {
		
		if (((CharSequence) orgao.getToolkit()).length() != 0 
				 && FNome.getText().length() != 0
				&& FEntrada.getText().length() != 0
				) {


			
			//preencherTabela();
			
			//limparCampos();
			
			 PacientesProcess.salvar();
			
		} else {
			JOptionPane.showMessageDialog(this, "Verefique se os campos foram preenchidos corretamente!");
		}
	}
		
	//PREENCHER TABEÇLA :D
	
	private void preencherTabela() {
		int totLinhas = tablePacientes.getRowCount();
		if (tablePacientes.getRowCount() > 0) {
			for (int i = 0; i < totLinhas; i++) {
				tablePacientes.removeRow(0);
			}
		}
	}
	
	private void updateMet() {
		
		
	}
	private void deleteMet() {
		
		
	}
	private void readMET() {
		
		
	}


	public static void main(String[] args) {
		new TelaUsuario().setVisible(true);
	}
	
	

	@Override
	public void actionPerformed(ActionEvent e) {
		
		if(e.getSource() == Salvar) {
			SaveMet();
		}
		
		if(e.getSource() == Cadastrar) {
			createMet();
		}
		
		
		if 
		(e.getSource() == Editar){
			updateMet();
		}
		
		if 
		(e.getSource() == Excluir){
			deleteMet();
		}
		
		if 
			(e.getSource() == Buscar){
			readMET();
		}		
	}
}
	
